import { BasicColumn, FormSchema } from '@/components/Table';
import { dictSelectProps } from '@/api/system/dictData';

export const columns: BasicColumn[] = [
    <% for(column in tableColumns) { %>
  {
    title: '${column.columnRemark}',
    dataIndex: '${column.fieldName}',
<% if (isNotEmpty(column.dictKey) && statusApi==false) { %>
    customRender: ({ record }) => record.transMap?.${column.fieldName}Name,
<% } %>
<% if (statusApi==true) { %>
    slots: { customRender: '${column.fieldName}' },
<% } %>
  },
<% } %>
];

export const searchFormSchema: FormSchema[] = [
    <% for(column in searchColumns) { %>
  {
    field: '${column.fieldName}',
    label: '${column.columnRemark}',
<% if (isEmpty(column.dictKey)) { %>
    component: '${column.searchFieldType}',
<% } %>
<% if (isNotEmpty(column.dictKey)) { %>
    component: 'ApiSelect',
    componentProps: dictSelectProps('${column.dictKey}'),
<% } %>
  },
<% } %>
];

export const formSchema: FormSchema[] = [
    <% for(column in editColumns) { %>
  {
    field: '${column.fieldName}',
    label: '${column.columnRemark}',
<% if (column.fieldName=='id') { %>
    show: false,
<% } %>
<% if (isEmpty(column.dictKey)) { %>
    component: '${column.editFieldType}',
<% } %>
<% if (isNotEmpty(column.dictKey)) { %>
    component: 'ApiSelect',
    componentProps: dictSelectProps('${column.dictKey}'),
<% } %>
  },
<% } %>
];
