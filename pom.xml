<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.7</version>
        <relativePath />
    </parent>

    <groupId>cn.lenmotion</groupId>
    <artifactId>donut</artifactId>
    <version>1.0.0</version>
    <name>donut-admin</name>
    <description>donut通用管理系统 - 基于ruoyi</description>
    <packaging>pom</packaging>

    <properties>
        <java.version>17</java.version>
        <spring-boot.version>3.1.7</spring-boot.version>
        <druid.version>1.2.20</druid.version>
        <mysql.version>8.2.0</mysql.version>
        <p6spy.version>3.9.1</p6spy.version>
        <mybatis-plus.version>3.5.5</mybatis-plus.version>
        <hutool.version>5.8.25</hutool.version>
        <easy-trans.version>3.0.0</easy-trans.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <sa-token.version>1.37.0</sa-token.version>
        <knif4j.version>4.5.0</knif4j.version>
        <redisson.version>3.24.3</redisson.version>
        <oshi.version>5.6.1</oshi.version>
        <easyexcel.version>3.3.3</easyexcel.version>
        <x-file-storage.version>2.0.0</x-file-storage.version>
        <minio.version>8.5.3</minio.version>
    </properties>

    <modules>
        <module>donut-api</module>
        <module>donut-core</module>
        <module>donut-modules</module>
        <module>donut-framework</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- SpringBoot的依赖配置-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>cn.lenmotion</groupId>
                <artifactId>donut-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.lenmotion</groupId>
                <artifactId>donut-framework</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.lenmotion</groupId>
                <artifactId>donut-auth</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.lenmotion</groupId>
                <artifactId>donut-system-service</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.lenmotion</groupId>
                <artifactId>donut-system-remote</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.lenmotion</groupId>
                <artifactId>donut-system-entity</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.lenmotion</groupId>
                <artifactId>donut-monitor</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-3-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- Mysql驱动包 -->
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <dependency>
                <groupId>p6spy</groupId>
                <artifactId>p6spy</artifactId>
                <version>${p6spy.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fhs-opensource</groupId>
                <artifactId>easy-trans-spring-boot-starter</artifactId>
                <version>${easy-trans.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fhs-opensource</groupId>
                <artifactId>easy-trans-mybatis-plus-extend</artifactId>
                <version>${easy-trans.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fhs-opensource</groupId>
                <artifactId>easy-trans-untrans-driver</artifactId>
                <version>${easy-trans.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-spring-boot3-starter</artifactId>
                <version>${sa-token.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-redis-jackson</artifactId>
                <version>${sa-token.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
                <version>${knif4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.oshi</groupId>
                <artifactId>oshi-core</artifactId>
                <version>${oshi.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>

            <dependency>
                <groupId>org.dromara.x-file-storage</groupId>
                <artifactId>x-file-storage-spring</artifactId>
                <version>${x-file-storage.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--使用docker-maven-plugin插件-->
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>1.2.2</version>
                    <!--将插件绑定在某个phase执行-->
                    <executions>
                        <execution>
                            <id>build-image</id>
                            <!--用户只需执行mvn package ，就会自动执行mvn docker:build-->
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>

                    <configuration>
                        <!--指定生成的镜像名,这里是我们的作者名+项目名-->
                        <imageName>lenmotion/${project.artifactId}</imageName>

                        <!--指定标签 这里指定的是镜像的版本，我们默认版本是latest-->
                        <imageTags>
                            <imageTag>${project.version}</imageTag>
                        </imageTags>

                        <!--指定基础镜像jdk1.8-->
                        <baseImage>openjdk:17.0.1</baseImage>
                        <!--镜像制作人本人信息-->
                        <maintainer>lenmotion@sina.com</maintainer>
                        <!--切换到ROOT目录-->
                        <workdir>/ROOT</workdir>

                        <!--查看我们的java版本-->
                        <cmd>["java", "-version"]</cmd>

                        <!--${project.build.finalName}.jar是打包后生成的jar包的名字-->
                        <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>

                        <!--指定远程 docker api地址-->
                        <dockerHost>http://127.0.0.1:2375</dockerHost>

                        <!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <!--jar 包所在的路径  此处配置的 即对应 target 目录-->
                                <directory>${project.build.directory}</directory>
                                <!--用于指定需要复制的文件 需要包含的 jar包 ，这里对应的是 Dockerfile中添加的文件名　-->
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
